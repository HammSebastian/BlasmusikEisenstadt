# -----------------------------
# PRODUCTION PROFILE CONFIGURATION
# -----------------------------

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/api/v1

# Enable HTTPS in production with enhanced security
server.ssl.enabled=${SSL_ENABLED:true}
server.ssl.key-store=${SSL_KEYSTORE_PATH}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=${SSL_KEY_ALIAS}
# Enhanced SSL/TLS Security
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.2,TLSv1.3
server.ssl.ciphers=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-GCM-SHA256
server.ssl.client-auth=none

# Redirect HTTP to HTTPS
server.http2.enabled=true
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration for Production
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_MAX_LIFETIME:1800000}
spring.datasource.hikari.leak-detection-threshold=${DB_LEAK_DETECTION:60000}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false

# Security Configuration
# CORS Configuration - Hardened for Production
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,X-Correlation-ID
app.cors.allow-credentials=true
app.cors.max-age=3600

# Auth0 Configuration
auth0.domain=${AUTH0_DOMAIN}
auth0.audience=${AUTH0_AUDIENCE}
auth0.issuer-uri=${AUTH0_ISSUER_URI}

# OAuth2 Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER_URI}

# Session Configuration
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
server.servlet.session.timeout=30m

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized
management.health.probes.enabled=true

# Secure actuator endpoints
management.endpoints.web.cors.allowed-origins=${ACTUATOR_CORS_ORIGINS:${app.cors.allowed-origins}}
management.endpoints.web.cors.allowed-methods=GET,POST
management.security.enabled=true

# Metrics and Monitoring
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=production

# Application Info
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Logging Configuration
logging.level.root=WARN
logging.level.com.sebastianhamm.Backend=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN
logging.level.org.flywaydb=INFO

# Structured Logging Pattern with Correlation ID and JSON Format
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] %logger{36} - %msg%n
logging.file.name=${LOG_FILE_PATH:/var/log/stadtkapelle/backend.log}
logging.file.max-size=10MB
logging.file.max-history=30
logging.file.total-size-cap=1GB

# Additional logging configuration for structured logging
logging.pattern.level=%5p
logging.charset.console=UTF-8
logging.charset.file=UTF-8

# Email Configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST}

# Jackson Configuration
spring.jackson.time-zone=Europe/Vienna
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false

# Performance Tuning
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory

# Thread Pool Configuration
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=stadtkapelle-task-

# HTTP Client Configuration
spring.http.client.timeout=30s
spring.http.client.read-timeout=30s

# Multipart Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Error Handling
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# API Documentation (Swagger) - Disabled in production for security
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Application-specific Configuration
app.environment=production
app.debug.enabled=false

# Rate Limiting (if implemented)
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=${RATE_LIMIT_RPM:100}

# File Upload Security
app.upload.max-file-size=10MB
app.upload.allowed-types=image/jpeg,image/png,image/gif,application/pdf
app.upload.path=${UPLOAD_PATH:/var/uploads/stadtkapelle}

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h