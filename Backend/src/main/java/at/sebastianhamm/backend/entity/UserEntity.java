package at.sebastianhamm.backend.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.sql.Timestamp;

/**
 * Represents a user account in the system.
 * This entity is used for authentication and authorization purposes,
 * storing user credentials and account status information.
 * 
 * The table is mapped to 'tbl_users' in the database.
 */
@Entity
@Table(name = "tbl_users")
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class UserEntity {

    /**
     * Unique identifier for the user.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Unique user identifier, typically a UUID.
     * Used as a public reference to the user.
     */
    @Column(unique = true)
    private String userId;

    /** User's full name or display name */
    private String name;

    /** 
     * User's email address, must be unique across the system.
     * Used for account communication and password reset functionality.
     */
    @Column(unique = true)
    private String email;
    
    /** 
     * Hashed password for user authentication.
     * Should never be stored in plain text.
     */
    private String password;
    /** One-time password used for email verification */
    private String verifyOtp;
    
    /** Flag indicating if the user's email has been verified */
    private boolean isAccountVerified;
    
    /** Expiration timestamp for the verification OTP */
    private Long verifyOtpExpiresAt;
    
    /** One-time password used for password reset */
    private String resetOtp;
    
    /** Expiration timestamp for the password reset OTP */
    private Long resetOtpExpiresAt;

    /** 
     * Timestamp when the user account was created.
     * Automatically set by Hibernate on creation and cannot be updated.
     */
    @CreationTimestamp
    @Column(updatable = false)
    private Timestamp createdAt;

    /** 
     * Timestamp when the user account was last updated.
     * Automatically updated by Hibernate on each update.
     */
    @UpdateTimestamp
    private Timestamp updatedAt;
}
